package cdc.wallet.management.model;

import cdc.wallet.management.auditing.FullAuditable;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;

import java.io.Serial;
import java.io.Serializable;
import java.math.BigDecimal;

/**
 * Entity class which represents wallet in the application
 *
 */
@Data
@Entity
@NoArgsConstructor
@Table(name = "wallet_master")
@EqualsAndHashCode(callSuper = true)
public class WalletMaster extends FullAuditable implements Serializable {

    /**
     * Serial version UID for serialization and deserialization
     */
    @Serial
    private static final long serialVersionUID = 938188764288853868L;

    /**
     * Unique identifier of the wallet master which will be generated by table
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "wallet_master_id")
    private Long walletMasterId;

    /**
     * Client ID which this wallet belongs to
     */
    @NotNull
    @Column(name = "client_id", nullable = false)
    private Long clientId;

    /**
     * Currency of the amount which this wallet holds
     */
    @NotBlank
    @Column(name = "currency", length = 3, nullable = false)
    private String currency;

    /**
     * Amount that was available in this wallet
     */
    @NotNull
    @Column(name = "balance", nullable = false)
    private BigDecimal balance;

    /**
     * Status of the wallet to know whether it is active or not
     */
    @NotNull
    @Column(name = "is_active", nullable = false)
    private Boolean isActive;

    public WalletMaster(Long clientId, String currency, BigDecimal balance, Boolean isActive) {
        this.clientId = clientId;
        this.currency = currency;
        this.balance = balance;
        this.isActive = isActive;
    }

    public WalletMaster(Long walletMasterId, BigDecimal balance) {
        this.walletMasterId = walletMasterId;
        this.balance = balance;
    }

}
